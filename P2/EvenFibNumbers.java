// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


import java.util.ArrayList;

public class EvenFibNumbers {
	public static void main(String args[]) {
		System.out.println(EvenFibSum());
	}

	public static int fibonacci(int n) {
		int a = 0, b = 1, c = 0;
		for (int i = 0; i < n; i++) {c = (a+b); a = b; b = c;}
		return a;
	}

	public static int EvenFibSum() {
		int fib = 0, sum = 0, count = 0;

		for (int i = 0; ; i++) {
			fib = fibonacci(i);
			if (fib >= 4000000) {break;}
			if (fib%2==0){sum += fib;}
		}

		return sum;
	}
}